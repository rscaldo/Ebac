/**
 * 
 * 

OS TOPICOS IMPORTANTES SÃO A PARTIR DA AULA 3

AULA 1
URL - UNIFORM RESOURCE LOCATOR
UMA URL TEM UMA BASE URL, RECURSOS E PODE TER QUERY PARAMETERS

HTTP > HYPERTEXT TRANSFER PROTOCOL
É UTILIZADO PARA FAZER AS CHAMADAS DO FRONT-END PARA O BACK-END

FRONT-END > HTTP > INTERNET > INFRA E BACK-END

UMA CHAMADA HTTP É COMPOSTA POR:
 - MÉTODO/VERBO: GET, POST, PUT, DELETE
 - HEADERS/CABEÇALHOS
 - BODY(OPCIONAL)

UMA RESPOSTA HTTP É COMPOSTA POR:
 - STATUS CODE
 - HEADERS/CABEÇALHOS
 - BODY(OPCIONAL)


JSON > JAVASCRIPT OBJECT NOTATION
É BASICAMENTE COM CONJUNTO CHAVE-VALOR

{
  "NOME": "VALOR"
}

API > APPLICATION PROGRAMMING INTERFACE
A FORMA COMO UMA APLICAÇÃO VAI SE RELACIONAR COM A OUTRA, O FRONT-END DE COMUNICA COM O BACK-END ATRAVES DE UMA API

REST > REPRESENTATIONAL STATE TRANSFER
PADRÃO DE CONSTRUÇÃO DE API

AULA 2 

VAMOS CRIAR UM FORMALÁRIO QUE VAI ACESSAR UMA API PARA CONSULTA DE CEP

NO SITE DO BOOTSTRAP, VAMOS EM READ DOCS E COPIAR O CDN DO CSS


AJAX > ASYNCHRONOUS JAVASCRIPT AND XML
COM ELE É POSSIVEL TER INTERAÇÃO DO FRONT-END E BACK-END SEM TER QUE RECARREGAR AS PÁGINAS

PARA UTILIZAR O AJAX NO JS TEMOS QUE CRIAR UMA CONSTANTE

const xhttp = new XMLHttpRequest();

APÓS ISSO TEMOS O ENDEREÇO QUE VAI SER ACESSADO PARA PEGAR AS INFORMAÇÕES NECESSÁRIAS NESSE CASO É:


https://viacep.com.br/ws/1234554/json

ESSA NUMERAÇÃO É O CEP DIGITADO, PORTANTO TEMOS QUE RECUPERAR OS DADOS DIGITADOS PELO USUÁRIO NA PÁGINA E SUBSTITUIR NESSE ENDEREÇO

PARA RECUPERAR O CONTEUDO

const cep = document.getElementById('cep').value;

NESSA OUTRA CONSTANTE VAMOS JOGAR O ENDEREÇO COM A SUBSTITUIÇÃO COLOCANDO O VALOR DE CEP
const endpoint = `https://viacep.com.br/ws/${cep}/json`

AGORA PRECISAMOS CHAMAR O REQUEST, COM A VARIAVEL CRIADA xhttp

xhttp.open('GET', endpoint)
AQUI INFORMAMOS AO AJAX QUE ELE DEVE REALIZAR UM GET NESSE ENDPOINT

xhttp.send()

PARA TESTAR TEMOS QUE ABRIR O INSPPETOR E IR NA ABA NETWORK, APÓS DIGITAR O CEP VAI APARECER UM ARQUIVO json, VOCE CLICA NELE E EM PREVIEW VOCE TEM AS INFORMAÇÕES


AULA 3 - REQUISIÇÕES AJAX COM FETCH API

AULA 4 - TRATANDO EXCEÇÕES

UMA EXCEÇÃO É UM ERRO NO PROGRAMA
 *  */
